#%RAML 1.0
title: Weekly Menu API
version: v1
baseUri: http://api.samplehost.com

#Security scheme
securitySchemes:
  bearer:
    description: |
      Basically, you need to set the header 'Authorization' to 'Bearer <API_KEY>'. If you're having trouble with this, email support@stripe.com
    type: x-bearer
    describedBy: 
      headers: 
        Authorization: 

#Resource Types definition
resourceTypes:
  collection:
    usage: This resourceType should be used for any collection of items
    description: The collection of <<resourcePathName>>
    get:
      description: Get all <<resourcePathName>>, optionally filtered
      responses:
        200:
          body:
            application/json:
              type: array
              items: <<resourcePathName | !uppercamelcase>>
    post:
      description: Create a new <<resourcePathName | !singularize>>
      responses:
        201:
          body:
            application/json:
              type: <<resourcePathName | !uppercamelcase | !singularize>>

  element:
    usage: This resourceType should be used for any item of a collection of items
    description: An element of collection <<resourcePathName>>
    get:
      description: Get one <<resourcePathName>>
      responses:
        200:
          body:
            application/json:
              type: <<resourcePathName | !uppercamelcase | !singularize>>
    patch:
      description: Create a new <<resourcePathName | !singularize>>
      responses:
        200:
          body:
            application/json:
              type: <<resourcePathName | !uppercamelcase | !singularize>>
    delete:
      description: Delete one <<resourcePathName | !singularize>>
      responses:
        200:
          body:
            application/json:
              type: <<resourcePathName | !uppercamelcase | !singularize>>


#Traits definition
traits:
  pageable:
    usage: Apply this trait to a GET method that supports pagination.
    queryParameters:
      offset?:
        type: integer
        default: 10
        minimum: 0
        description: The `offset` parameter specifies the first entry to return from a collection.
      limit?:
        type: integer
        default: 50
        minimum: 1
        description: The `limit` parameter restricts the number of entries returned.
      page?:
        type: integer
        default: 1
        minimum: 1
    description: The `page` parameter specifies the page of results to return.


#Types definition
types:
  User:
    type: object
    properties:
      username: string
      name: string
      email: string
      shoppingDay:
        type: array
        items: DayOfWeek
        minItems: 1
        maxItems: 7

  Ingredient:
    type: object
    properties:
      name: string
      description: string
      note: string
      freezed: boolean
      rating:
        type: integer
        minimum: 1
        maximum: 5
      recipeUrl: string
      availabilityMonths:
        type: array
        items: integer
      tags: 
        type: array
        items: string

  Recipe:
    type: object
    properties:
      name: string
      description: string
      note: string
      availabilityMonths:
        type: array
        items: integer
      ingredients:
        type: array
        items: Ingredient
      servs:
        type: integer
        description: how many people, this recipe, servs
      estimatedCookingTime: integer
      estimatedPreparationTime: integer

  Meal:
    type: string
    enum: ["breakfast", "launch", "dinner"]

  Menu:
    type: object
    properties:
      date: date-only
      meal: Meal
      recipes:
        type: array
        items: Recipe

  DayOfWeek:
    type: integer
    minimum: 1
    maximum: 7

  ShoppingList:
    type: object
    properties:
      ObjectId: string
      items:
        type: array
        items:
          type: Ingredient
          properties:
            checked: boolean
            shoppingNote: string

/auth:
  /register:
    description: Register new user
    post:
  /token:
    description: Retrieve a token given user credentials
    post:

/users:
  /me:
    description: Retrieve informaion of the current user
    securedBy: bearer
    get:

/ingredients:
  type: collection
  is:  [pageable]
  securedBy: bearer
  /{ingredientId}:
    type: element
    securedBy: bearer

/recipes:
  type: collection
  is:  [pageable]
  securedBy: bearer
  /{recipeId}:
    type: element
    securedBy: bearer
    /ingredients:
      type: collection
      securedBy: bearer
        /{ingredientId}:
          type: element
          securedBy: bearer

/menus:
  type: collection
  is:  [pageable]
  securedBy: bearer
  queryParameters:
      from:
        type: string
        description: search menus from this date (format: YYYY-MM-DD)
      to:
        type: string
        description: search menus to this date (format: YYYY-MM-DD)
      of:
        type: string
        description: search menus just for this date (format: YYYY-MM-DD)
  /{menuId}:
    type: element
    securedBy: bearer
    /recipes:
      type: collection
      securedBy: bearer
        /{recipeId}:
          type: element
          securedBy: bearer
  /generate:
    description: Generate new menu for the next week
    securedBy: bearer
    get:
      responses:
        201:
         body:
           application/json:
             type: Menu[]

/shopping:
  /lists:
    type: collection
    is: [pageable]
    description: Retrieve shopping lists for current user
    securedBy: bearer
    get:
      responses:
        200:
          body:
            application/json:
              type: ShoppingList
    /{listId}:
      securedBy: bearer
      type: element
      /items:
        securedBy: bearer

  /day:
    description: Get or set the designed day(s) of the week that indicates when the user is used to go to shopping
    securedBy: bearer
    get:
      responses:
        200:
          body:
            application/json:
              type: object
              properties:
                dayOfWeek: DayOfWeek[]
    put:
      body:
        application/json:
          type: object
          properties:
            dayOfWeek: DayOfWeek
